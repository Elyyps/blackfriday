{"ast":null,"code":"function _toConsumableArray(arr) { return _arrayWithoutHoles(arr) || _iterableToArray(arr) || _nonIterableSpread(); }\n\nfunction _nonIterableSpread() { throw new TypeError(\"Invalid attempt to spread non-iterable instance\"); }\n\nfunction _iterableToArray(iter) { if (Symbol.iterator in Object(iter) || Object.prototype.toString.call(iter) === \"[object Arguments]\") return Array.from(iter); }\n\nfunction _arrayWithoutHoles(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = new Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } }\n\nimport { connect } from \"react-redux\";\nimport { IntlProvider, addLocaleData } from \"react-intl\";\nimport nl from \"react-intl/locale-data/nl\";\nimport en from \"react-intl/locale-data/en\";\naddLocaleData([].concat(_toConsumableArray(nl), _toConsumableArray(en)));\n\nvar mapStateToProps = function mapStateToProps(state) {\n  var _state$locales = state.locales,\n      locale = _state$locales.locale,\n      messages = _state$locales.messages;\n  return {\n    locale: locale,\n    messages: messages\n  };\n};\n\nexport var IntlProviderContainer = connect(mapStateToProps)(IntlProvider);","map":{"version":3,"sources":["/Users/TomK/Code/BlackFriday_Client/src/shared/translations/intl-provider.container.ts"],"names":["connect","IntlProvider","addLocaleData","nl","en","mapStateToProps","state","locales","locale","messages","IntlProviderContainer"],"mappings":";;;;;;;;AACA,SAASA,OAAT,QAA6D,aAA7D;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,YAA5C;AAEA,OAAOC,EAAP,MAAe,2BAAf;AACA,OAAOC,EAAP,MAAe,2BAAf;AASAF,aAAa,8BAAKC,EAAL,sBAAYC,EAAZ,GAAb;;AAEA,IAAMC,eAAgE,GAAG,SAAnEA,eAAmE,CAAAC,KAAK,EAAI;AAAA,uBACnDA,KAAK,CAACC,OAD6C;AAAA,MACxEC,MADwE,kBACxEA,MADwE;AAAA,MAChEC,QADgE,kBAChEA,QADgE;AAGhF,SAAO;AACLD,IAAAA,MAAM,EAANA,MADK;AAELC,IAAAA,QAAQ,EAARA;AAFK,GAAP;AAID,CAPD;;AAUA,OAAO,IAAMC,qBAAqB,GAAGV,OAAO,CAACK,eAAD,CAAP,CAAyBJ,YAAzB,CAA9B","sourcesContent":["import * as React from \"react\";\nimport { connect, MapStateToProps, MapDispatchToProps } from \"react-redux\";\nimport { IntlProvider, addLocaleData } from \"react-intl\";\n\nimport nl from \"react-intl/locale-data/nl\";\nimport en from \"react-intl/locale-data/en\";\n\nimport { IAppState } from \"@app/stores\";\n\ninterface IProps {}\n\ninterface IStateProps {}\ninterface IDispatchProps {}\n\naddLocaleData([...nl, ...en]);\n\nconst mapStateToProps: MapStateToProps<IStateProps, IProps, IAppState> = state => {\n  const { locale, messages } = state.locales;\n\n  return {\n    locale,\n    messages\n  };\n};\n\nexport type IntlContainerProps = IStateProps & IDispatchProps;\nexport const IntlProviderContainer = connect(mapStateToProps)(IntlProvider);\n"]},"metadata":{},"sourceType":"module"}