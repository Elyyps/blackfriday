{"ast":null,"code":"import React from \"react\";\nimport { hydrate } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router } from \"react-router-dom\";\nimport { configureStore } from \"../shared/stores\";\nimport createHistory from \"../shared/stores/history\";\nimport \"./index.scss\";\nimport { IntlProviderContainer } from \"@app/translations/intl-provider.container\";\nimport { Routes } from \"@app/routes\";\nvar history = createHistory(); // Create/use the store\n// history MUST be passed here if you want syncing between server on initial route\n\nvar store = window.store || configureStore({\n  initialState: window.__PRELOADED_STATE__,\n  history: history\n});\nhydrate(React.createElement(Provider, {\n  store: store\n}, React.createElement(Router, null, React.createElement(IntlProviderContainer, null, React.createElement(React.Fragment, null, React.createElement(Routes, null))))), document.getElementById(\"app\"));\n\nif (process.env.NODE_ENV === \"development\") {\n  if (module.hot) {\n    module.hot.accept();\n  }\n\n  if (!window.store) {\n    window.store = store;\n  }\n}","map":{"version":3,"sources":["/Users/TomK/Code/BlackFriday_Client/src/client/index.tsx"],"names":["React","hydrate","Provider","BrowserRouter","Router","configureStore","createHistory","IntlProviderContainer","Routes","history","store","window","initialState","__PRELOADED_STATE__","document","getElementById","process","env","NODE_ENV","module","hot","accept"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAgC,WAAhC;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,aAAa,IAAIC,MAA1B,QAA+C,kBAA/C;AAEA,SAASC,cAAT,QAA+B,kBAA/B;AACA,OAAOC,aAAP,MAA0B,0BAA1B;AACA,OAAO,cAAP;AACA,SAASC,qBAAT,QAAsC,2CAAtC;AACA,SAASC,MAAT,QAAuB,aAAvB;AAEA,IAAMC,OAAO,GAAGH,aAAa,EAA7B,C,CAEA;AACA;;AACA,IAAMI,KAAK,GACTC,MAAM,CAACD,KAAP,IACAL,cAAc,CAAC;AACbO,EAAAA,YAAY,EAAED,MAAM,CAACE,mBADR;AAEbJ,EAAAA,OAAO,EAAPA;AAFa,CAAD,CAFhB;AAOAR,OAAO,CACL,oBAAC,QAAD;AAAU,EAAA,KAAK,EAAES;AAAjB,GACE,oBAAC,MAAD,QACE,oBAAC,qBAAD,QACE,oBAAC,KAAD,CAAO,QAAP,QACE,oBAAC,MAAD,OADF,CADF,CADF,CADF,CADK,EAULI,QAAQ,CAACC,cAAT,CAAwB,KAAxB,CAVK,CAAP;;AAaA,IAAIC,OAAO,CAACC,GAAR,CAAYC,QAAZ,KAAyB,aAA7B,EAA4C;AAC1C,MAAIC,MAAM,CAACC,GAAX,EAAgB;AACdD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX;AACD;;AAED,MAAI,CAACV,MAAM,CAACD,KAAZ,EAAmB;AACjBC,IAAAA,MAAM,CAACD,KAAP,GAAeA,KAAf;AACD;AACF","sourcesContent":["import React from \"react\";\nimport { hydrate, render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { BrowserRouter as Router, Route } from \"react-router-dom\";\n\nimport { configureStore } from \"../shared/stores\";\nimport createHistory from \"../shared/stores/history\";\nimport \"./index.scss\";\nimport { IntlProviderContainer } from \"@app/translations/intl-provider.container\";\nimport { Routes } from \"@app/routes\";\n\nconst history = createHistory();\n\n// Create/use the store\n// history MUST be passed here if you want syncing between server on initial route\nconst store =\n  window.store ||\n  configureStore({\n    initialState: window.__PRELOADED_STATE__,\n    history\n  });\n\nhydrate(\n  <Provider store={store}>\n    <Router>\n      <IntlProviderContainer>\n        <React.Fragment>\n          <Routes />\n        </React.Fragment>\n      </IntlProviderContainer>\n    </Router>\n  </Provider>,\n  document.getElementById(\"app\")\n);\n\nif (process.env.NODE_ENV === \"development\") {\n  if (module.hot) {\n    module.hot.accept();\n  }\n\n  if (!window.store) {\n    window.store = store;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}