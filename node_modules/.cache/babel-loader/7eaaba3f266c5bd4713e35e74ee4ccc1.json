{"ast":null,"code":"function _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; var ownKeys = Object.keys(source); if (typeof Object.getOwnPropertySymbols === 'function') { ownKeys = ownKeys.concat(Object.getOwnPropertySymbols(source).filter(function (sym) { return Object.getOwnPropertyDescriptor(source, sym).enumerable; })); } ownKeys.forEach(function (key) { _defineProperty(target, key, source[key]); }); } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { REDUX } from \"@app/constants\";\n\nvar setPages = function setPages(payload) {\n  return _objectSpread({\n    type: REDUX.PAGE.SET_PAGES\n  }, payload);\n};\n\nvar setCurrentPage = function setCurrentPage(payload) {\n  return _objectSpread({\n    type: REDUX.PAGE.SET_CURRENT_PAGE\n  }, payload);\n};\n\nvar addToPages = function addToPages(payload) {\n  return _objectSpread({\n    type: REDUX.PAGE.ADD_TO_PAGES\n  }, payload);\n};\n\nexport var pageActions = {\n  addToPages: addToPages,\n  setCurrentPage: setCurrentPage,\n  setPages: setPages\n};","map":null,"metadata":{},"sourceType":"module"}