{"ast":null,"code":"function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }\n\nfunction _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); return Constructor; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nexport var StylingOverrideUtil =\n/*#__PURE__*/\nfunction () {\n  function StylingOverrideUtil(propsStyle) {\n    _classCallCheck(this, StylingOverrideUtil);\n\n    _defineProperty(this, \"propsStyle\", void 0);\n\n    this.propsStyle = propsStyle;\n  }\n\n  _createClass(StylingOverrideUtil, [{\n    key: \"getStyle\",\n    value: function getStyle(moduleStyle, name) {\n      if (!this.propsStyle) {\n        return moduleStyle[name];\n      }\n\n      return [this.propsStyle[name], moduleStyle[name]].join(\" \");\n    }\n  }]);\n\n  return StylingOverrideUtil;\n}();","map":null,"metadata":{},"sourceType":"module"}